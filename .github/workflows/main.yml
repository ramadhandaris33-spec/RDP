name: RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      # === 1Ô∏è‚É£ Enable RDP ===
      - name: Enable RDP
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389

      # === 2Ô∏è‚É£ Create RDP User ===
      - name: Create RDP User
        shell: pwsh
        run: |
          $password = -join ((48..57) + (65..90) + (97..122) | Get-Random -Count 16 | ForEach-Object {[char]$_})
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          echo "RDP_PASS=$password" >> $env:GITHUB_ENV

      # === 3Ô∏è‚É£ Install Tailscale (tanpa prompt) ===
      - name: Install Tailscale
        shell: pwsh
        run: |
          $url = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $out = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $out
          Start-Process msiexec.exe -ArgumentList "/i `"$out`" /qn /norestart" -Wait
          Remove-Item $out -Force

      # === 4Ô∏è‚É£ Connect Tailscale ===
      - name: Connect Tailscale
        shell: pwsh
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up `
            --authkey=${{ secrets.TAILESCALE_AUTH_KEY }} `
            --hostname=gh-rdp-${{ github.run_id }}

          Start-Sleep -Seconds 20
          $ip = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
          echo "TAILSCALE_IP=$ip" >> $env:GITHUB_ENV

      # === 5Ô∏è‚É£ Send Info to Discord ===
      - name: Send Info to Discord
        shell: pwsh
        run: |
          $ip = $env:TAILSCALE_IP
          $pass = $env:RDP_PASS

          $embed = @{
              title = "üíª RDP Instance Aktif!"
              description = "Windows RDP kamu sudah siap digunakan üöÄ"
              color = 3447003
              thumbnail = @{
                  url = "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
              }
              fields = @(
                  @{
                      name = "üåê IP Tailscale"
                      value = "$ip"
                      inline = $false
                  },
                  @{
                      name = "üë§ Username"
                      value = "RDP"
                      inline = $true
                  },
                  @{
                      name = "üîë Password"
                      value = "$pass"
                      inline = $true
                  }
              )
              footer = @{
                  text = "üïí Dijalankan pada: $(Get-Date -Format 'dd-MM-yyyy HH:mm:ss')"
              }
              author = @{
                  name = "GitHub Actions Bot"
                  icon_url = "https://avatars.githubusercontent.com/u/9919?s=200&v=4"
              }
          }

          $payload = @{
              content = "**‚úÖ RDP baru telah aktif! Detail ada di bawah ini.**"
              embeds = @($embed)
              components = @(
                  @{
                      type = 1
                      components = @(
                          @{
                              type = 2
                              style = 5
                              label = "üåç Open Tailscale Admin"
                              url = "https://login.tailscale.com/admin/machines"
                          }
                      )
                  }
              )
          } | ConvertTo-Json -Depth 5

          Invoke-RestMethod -Uri "${{ secrets.DISCORD_WEBHOOK }}" -Method POST -Body $payload -ContentType 'application/json'

      # === 6Ô∏è‚É£ Finished Setup Log ===
      - name: Finished Setup
        shell: pwsh
        run: Write-Host "‚úÖ RDP setup complete! You can now connect using the credentials sent to Discord."

      # === 7Ô∏è‚É£ Keep Alive ===
      - name: Keep Alive
        shell: pwsh
        run: |
          while ($true) {
            Write-Host "[$(Get-Date)] RDP masih berjalan..."
            Start-Sleep -Seconds 300
          }
